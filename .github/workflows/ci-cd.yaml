name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: "20"
      DOCKER_IMAGE_NAME: "josephdung.dev"
      DOCKER_IMAGE_TAG: "latest"
      MONGODB_URI: ${{ secrets.MONGODB_URI }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }} .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}

      - name: Deploy to VPS
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          VPS_IP: ${{ secrets.VPS_IP }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_IP << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
            docker stop ${{ secrets.DOCKER_IMAGE_NAME }} || true
            docker rm ${{ secrets.DOCKER_IMAGE_NAME }} || true
            docker run -d -p 80:3000 --name ${{ secrets.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
          EOF
